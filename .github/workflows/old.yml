#========================================================================================================================
# https://github.com/ophub/amlogic-s9xxx-openwrt
# Description: 使用 Releases 文件进行打包
# Cron: 分钟 (0 - 59) / 小时 (0 - 23) / 每月日期 (1 - 31) / 月份 (1 - 12) / 星期几 (0 - 6)(星期日 - 星期六)
#========================================================================================================================

name: old

on:
  repository_dispatch:
  workflow_dispatch:
  
  # schedule:
  # - cron: '0 04 * * 0'

env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: openwrt-24.10
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_FIRMWARE: false
  UPLOAD_RELEASE: true
  RECENT_LASTEST: 30
  TZ: Asia/Shanghai
  FILE_NAME: old
  PRODUCT_NAME: old
  IMAGE_URL: https://dl.openwrt.ai/releases/24.10/targets/bcm27xx/bcm2711/kwrt-03.08.2025-bcm27xx-bcm2711-rpi-4-squashfs-sysupgrade.img.gz

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id || ! github.event.sender.id

    steps:
    - name: 检出代码
      uses: actions/checkout@v2

    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL https://is.gd/depends_ubuntu_2204) qemu-utils
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p -m 777 /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 克隆源代码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "DATE1=$(date "+%Y-%m-%d")" >> $GITHUB_ENV

    - name: 下载并转换镜像文件
      working-directory: /workdir
      run: |
        # 下载 .img.gz 文件
        wget -O rpi-4-sysupgrade.img.gz "$IMAGE_URL"
        # 解压 .img.gz 到 .img
        gunzip rpi-4-sysupgrade.img.gz
        # 创建临时挂载点
        mkdir -p mnt
        # 使用 qemu-nbd 挂载镜像
        sudo modprobe nbd
        sudo qemu-nbd -c /dev/nbd0 rpi-4-sysupgrade.img
        sleep 5  # 等待设备准备好
        # 找到根文件系统分区（通常是第二个分区）
        sudo mount /dev/nbd0p2 mnt
        # 将根文件系统打包为 tar.gz
        sudo tar -czf openwrt-rootfs.tar.gz -C mnt .
        # 清理
        sudo umount mnt
        sudo qemu-nbd -d /dev/nbd0
        rm -rf mnt rpi-4-sysupgrade.img
        # 将生成的文件移动到预期位置
        mv openwrt-rootfs.tar.gz /workdir/openwrt-rootfs.tar.gz
        echo "OPENWRT_ARMVIRT=/workdir/openwrt-rootfs.tar.gz" >> $GITHUB_ENV

    - name: 将 Armvirt 打包为 OpenWrt
      if: (!cancelled())
      uses: ophub/flippy-openwrt-actions@main
      env:
        OPENWRT_ARMVIRT: ${{ env.OPENWRT_ARMVIRT }}
        PACKAGE_SOC: qemu
        WHOAMI: Demons
        OPENWRT_VER: 24.10
        GZIP_IMGS: .gz
        GH_TOKEN: ${{ secrets.TOKEN3 }}

    - name: 上传固件到 Actions
      uses: kittaakos/upload-artifact-as-is@master
      if: env.PACKAGED_STATUS == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        path: ${{ env.PACKAGED_OUTPUTPATH }}/

    - name: 上传 OpenWrt 固件到 Release
      id: release
      uses: ncipollo/release-action@v1
      if: env.PACKAGED_STATUS == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        name: R${{ env.DATE }} for ${{ env.FILE_NAME }}
        allowUpdates: true
        removeArtifacts: true
        tag: ${{ env.FILE_NAME }}
        commit: main
        token: ${{ secrets.TOKEN3}}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
        body: |
          - 默认IP：192.168.11.2 默认密码：password (WiFi密码同）
          - 当前使用版本:【编译前的最后一次➦[主源码](https://github.com/coolsnowwolf/lede)更新记录】
          ${{ env.useVersionInfo }}

    - name: 删除工作流运行记录
      uses: Mattraks/delete-workflow-runs@v2
      with:
        retain_days: 1
        keep_minimum_runs: 10

    - name: 删除旧的 Releases
      uses: dev-drprasad/delete-older-releases@v0.2.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        repo:
        keep_latest: 30
        delete_tag_pattern:
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN3 }}
